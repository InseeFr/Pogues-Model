name: Create snapshot

on:
  pull_request:
    types: [labeled]

jobs:

  remove-deploy-label:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy-snapshot') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: deploy-snapshot

  # begin the snapshot verification before deployment
  check-version:
    needs: remove-deploy-label
    runs-on: ubuntu-latest
    outputs:
      tag-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.6.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version.outputs.version }}

      - name: Tag verification
        id: check-tag
        run: |
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} already exists"
            exit 1
          fi

          if ! [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+.[0-9]+.[0-9]+-SNAPSHOT.?[0-9]*$ ]]; then
            echo "Nothing to tag/release, the tag ${{ steps.version.outputs.version }} is not in correct format X.Y.Z-SNAPSHOT"
            exit 1
          fi

  deploy-maven-repo:
    name: Publish Pogues-Model on Maven
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - uses: s4u/maven-settings-action@v3.1.0
        with:
          githubServer: false
          servers: |
            [
              {
                  "id": "central",
                  "username": "${{ secrets.MAVEN_CENTRAL_USERNAME }}",
                  "password": "${{ secrets.MAVEN_CENTRAL_TOKEN }}"
              }
            ]
      - name: Publish Pogues-Model
        run: mvn --batch-mode clean deploy -Pdeploy -DskipTests=true --no-transfer-progress
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  create-tag:
    needs: [ check-version, deploy-maven-repo ]
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.check-version.outputs.tag-version }}',
              sha: context.sha
            })

  deploy-comment:
    needs: [ check-version, deploy-maven-repo ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Version ${{ needs.check-version.outputs.tag-version }} deployed on maven central repository'
            })
